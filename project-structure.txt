/src
  ├── app/                        # App Router
  │   ├── layout.tsx              # Главный layout
  │   ├── page.tsx                # Главная страница (доски)
  │   ├── (dashboard)/            # Группа маршрутов для работы с досками
  │   │   ├── layout.tsx          # Общий layout для всех досок
  │   │   ├── page.tsx            # Страница всех досок
  │   ├── [userId]/              # Страница профиля пользователя
  │   │   ├── page.tsx           # Страница профиля пользователя
  │   │   ├── tasks/             # Задачи пользователя
  │   │   ├── boards/            # Список досок пользователя
  │   │   ├── [boardId]/          # Динамический маршрут доски
  │   │   │   ├── page.tsx        # Отдельная доска
  |   │   │   ├── members/        # Участники доски
  │   │   │   ├── tasks/          # Задачи на доске
  │   │   │   │   ├── [taskId]/
  │   │   │   │   │   ├── page.tsx  # Страница отдельной задачи
  │   ├── api/                     # API-роуты (Next.js server actions)
  │   │   ├── auth/route.ts         # API для аутентификации
  │   │   ├── boards/route.ts       # API для работы с досками
  │   │   ├── tasks/route.ts        # API для работы с задачами
  │   │   ├── users/route.ts      # API для работы с пользователями
  │   ├── providers.tsx             # Провайдеры контекста
  │   ├── styles/globals.css        # Глобальные стили
  ├── shared/                      # Переиспользуемые утилиты и UI
  │   ├── ui/                      # Общие UI-компоненты
  │   │   ├── Button.tsx           # Кнопки
  │   │   ├── Modal.tsx            # Модальные окна
  │   │   ├── Input.tsx            # Инпуты
  │   ├── lib/                     # Вспомогательные функции (fetcher, форматирование)
  │   ├── config/                   # Конфигурации (константы, env)
  ├── entities/                    # Сущности
  │   ├── board/                    # Доски
  │   │   ├── model/                 # Zustand / Redux / RTK Query
  │   │   ├── ui/                    # Компоненты доски
  │   │   ├── lib/                   # Хелперы
  │   ├── task/                      # Задачи
  │   │   ├── model/                 # Zustand / Redux
  │   │   ├── ui/                    # UI-компоненты карточек задач
  │   │   ├── api/                   # Методы API
  │   ├── user/
  │   │   ├── model/        # Хранилище (Zustand, RTK Query)
  │   │   ├── ui/           # UI-компоненты (аватар, профиль)
  │   │   ├── api/          # Методы API
  │   │   ├── lib/          # Хелперы (форматирование имени и т.д.)
  ├── features/                     # Фичи
  │   ├── auth/                      # Авторизация
  │   │   ├── model/                 # Состояние юзера
  │   │   ├── ui/                    # UI-компоненты
  │   │   ├── api/                   # API-запросы
  │   ├── board-actions/             # Действия с доской (удаление, изменение, сортировка)
  │   │   ├── ui/
  │   │   ├── model/
  │   │   ├── api/
  │   ├── task-actions/              # Действия с задачами
  ├── widgets/                      # Виджеты
  │   ├── sidebar/                   # Боковая панель
  │   ├── navbar/                    # Навигация
  │   ├── board-list/                # Виджет списка досок
  ├── processes/                    # Бизнес-процессы
  │   ├── user-session/              # Логика работы с сессией
  ├── types/                        # Глобальные типы
  ├── hooks/                        # Пользовательские хуки
  ├── store/                        # Глобальное хранилище (Zustand / Redux)
  ├── index.tsx                     # Точка входа
